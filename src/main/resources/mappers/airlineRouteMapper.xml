<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="solvd.airline.dataaccess.model.AirlineRoute.AirLineRouteMapper">

    <resultMap id="AirLineRouteResult" type="solvd.airline.dataaccess.model.AirlineRoute.AirLineRoute">
        <id property="routeId" column="airline_route_id"/>
        <result property="distanceMiles" column="distance_miles"/>
        <result property="priceDollars" column="price"/>
        <association property="originLocation" column="origin_location_id" javaType="solvd.airline.dataaccess.model.Location.Location" resultMap="locationId"/>
        <association property="destinationLocation" column="destination_location_id" javaType="solvd.airline.dataaccess.model.Location.Location" resultMap="locationId"/>
    </resultMap>


    <resultMap id="locationId" type="solvd.airline.dataaccess.model.Location.Location">
        <id property="locationId" column="location_id"/>
        <result property="locationName" column="location_name"/>
    </resultMap>


    <select id="getRoute" resultMap="AirLineRouteResult">
        SELECT * FROM `airline_routes` WHERE `airline_route_id` = #{id}
    </select>
    <select id="getAllRoutes" resultMap="AirLineRouteResult">
        SELECT * FROM `airline_routes`
    </select>
    <update id="updateRoute" parameterType="solvd.airline.dataaccess.model.AirlineRoute.AirLineRoute">
        UPDATE `airline_routes` SET `origin_location_id` = #{originLocation.locationId}, `destination_location_id` = #{destinationLocation.locationId}, `distance_miles` = #{distanceMiles}, `price` = #{price} WHERE `airline_route_id` = #{routeId}
    </update>
    <delete id="deleteRoute" parameterType="int">
        DELETE FROM `airline_routes` WHERE `airline_route_id` = #{id}
    </delete>
    <insert id="addRoute" parameterType="solvd.airline.dataaccess.model.AirlineRoute.AirLineRoute">
        INSERT INTO `airline_routes`(`origin_location_id`, `destination_location_id`, `distance_miles`, `price`) VALUES (#{originLocation.locationId}, #{destinationLocation.locationId}, #{distanceMiles}, #{price})
    </insert>

</mapper>
